name: flutter_core_image_filters

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.29.0'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter packages get

      - name: Format
        run: |
          dart format --set-exit-if-changed lib
          dart format --set-exit-if-changed test
      - name: Analyze
        run: flutter analyze

      - name: Run tests
        run: flutter test --no-pub --coverage
        continue-on-error: true

      - name: Format tests
        run: |
          flutter pub global activate remove_from_coverage
          remove_from_coverage -f coverage/lcov.info -r '\bmessages\b'

      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: coverage/lcov.info
          min_coverage: 80
          exclude: 'messages/'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  pana:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.29.0'
          channel: 'stable'

      - name: Install Dependencies
        run: |
          flutter packages get
          flutter pub global activate pana
      - name: Verify Pub Score
        run: |
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if [ -z "$1" ]; then MINIMUM_SCORE=TOTAL; else MINIMUM_SCORE=$1; fi
          if (( $SCORE < $MINIMUM_SCORE )); then echo "minimum score $MINIMUM_SCORE was not met!"; exit 1; fi