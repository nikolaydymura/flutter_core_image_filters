// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_core_image_filters/test/generated.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:flutter_core_image_filters/flutter_core_image_filters.dart'
    as _i3;
import 'package:flutter_core_image_filters/src/messages/filter_messages.g.dart'
    as _i6;
import 'package:flutter_core_image_filters/src/messages/preview_messages.g.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:plugin_platform_interface/plugin_platform_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CIFilterPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockCIFilterPlatform extends _i1.Mock
    with _i2.MockPlatformInterfaceMixin
    implements _i3.CIFilterPlatform {
  @override
  _i4.Future<int> create(String? name) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [name],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<_i5.Uint8List> exportData(
    int? filterId,
    String? format,
    String? context,
    List<double>? crop,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportData,
          [
            filterId,
            format,
            context,
            crop,
          ],
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
        returnValueForMissingStub:
            _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);

  @override
  _i4.Future<void> exportImageFile(
    int? filterId,
    String? path,
    String? format,
    String? context,
    List<double>? crop,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportImageFile,
          [
            filterId,
            path,
            format,
            context,
            crop,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> exportVideoFile(
    int? filterId,
    bool? asset,
    String? input,
    String? output,
    String? format,
    String? context,
    String? preset,
    int? period,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportVideoFile,
          [
            filterId,
            asset,
            input,
            output,
            format,
            context,
            preset,
            period,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setInputData(
    int? filterId,
    _i5.Uint8List? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInputData,
          [
            filterId,
            data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setInputAsset(
    int? filterId,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInputAsset,
          [
            filterId,
            path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setInputFile(
    int? filterId,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInputFile,
          [
            filterId,
            path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSNumberParameter(
    int? filterId,
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSNumberParameter,
          [
            filterId,
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIColorParameter(
    int? filterId,
    String? key,
    List<double>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIColorParameter,
          [
            filterId,
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSValueParameter(
    int? filterId,
    String? key,
    List<double>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSValueParameter,
          [
            filterId,
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIVectorParameter(
    int? filterId,
    String? key,
    List<double>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIVectorParameter,
          [
            filterId,
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIImageDataParameter(
    int? filterId,
    String? key,
    _i5.Uint8List? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIImageDataParameter,
          [
            filterId,
            key,
            data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIImageSourceParameter(
    int? filterId,
    String? key,
    bool? asset,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIImageSourceParameter,
          [
            filterId,
            key,
            asset,
            path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSDataParameter(
    int? filterId,
    String? key,
    _i5.Uint8List? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSDataParameter,
          [
            filterId,
            key,
            data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSDataSourceParameter(
    int? filterId,
    String? key,
    bool? asset,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSDataSourceParameter,
          [
            filterId,
            key,
            asset,
            path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSStringParameter(
    int? filterId,
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSStringParameter,
          [
            filterId,
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose(int? filterId) => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [filterId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CIImagePreviewPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockCIImagePreviewPlatform extends _i1.Mock
    with _i2.MockPlatformInterfaceMixin
    implements _i3.CIImagePreviewPlatform {
  @override
  _i4.Future<int> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> connect(
    int? textureId,
    int? filterId,
    String? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [
            textureId,
            filterId,
            context,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disconnect(int? textureId) => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSource(
    int? textureId,
    String? path, [
    bool? asset = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSource,
          [
            textureId,
            path,
            asset,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setData(
    int? textureId,
    _i5.Uint8List? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setData,
          [
            textureId,
            data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setOutput(
    int? textureId,
    List<double>? rect,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOutput,
          [
            textureId,
            rect,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose(int? textureId) => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CIVideoPreviewPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockCIVideoPreviewPlatform extends _i1.Mock
    with _i2.MockPlatformInterfaceMixin
    implements _i3.CIVideoPreviewPlatform {
  @override
  _i4.Future<int> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> connect(
    int? textureId,
    int? filterId,
    String? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [
            textureId,
            filterId,
            context,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disconnect(int? textureId) => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSource(
    int? textureId,
    String? path, [
    bool? asset = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSource,
          [
            textureId,
            path,
            asset,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resume(int? textureId) => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pause(int? textureId) => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose(int? textureId) => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [FilterApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilterApi extends _i1.Mock implements _i6.FilterApi {
  @override
  _i4.Future<int> create(String? arg_name) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [arg_name],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<_i5.Uint8List> exportData(
    List<int?>? arg_filters,
    String? arg_format,
    String? arg_context,
    List<double?>? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportData,
          [
            arg_filters,
            arg_format,
            arg_context,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
        returnValueForMissingStub:
            _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);

  @override
  _i4.Future<void> exportImageFile(
    List<int?>? arg_filters,
    String? arg_path,
    String? arg_format,
    String? arg_context,
    List<double?>? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportImageFile,
          [
            arg_filters,
            arg_path,
            arg_format,
            arg_context,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> exportVideoFile(
    List<int?>? arg_filters,
    bool? arg_asset,
    String? arg_input,
    String? arg_output,
    String? arg_format,
    String? arg_context,
    String? arg_preset,
    double? arg_period,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportVideoFile,
          [
            arg_filters,
            arg_asset,
            arg_input,
            arg_output,
            arg_format,
            arg_context,
            arg_preset,
            arg_period,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setInputData(
    int? arg_filterId,
    _i5.Uint8List? arg_data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInputData,
          [
            arg_filterId,
            arg_data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setInputAsset(
    int? arg_filterId,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInputAsset,
          [
            arg_filterId,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setInputFile(
    int? arg_filterId,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInputFile,
          [
            arg_filterId,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSNumberParameter(
    int? arg_filterId,
    String? arg_key,
    double? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSNumberParameter,
          [
            arg_filterId,
            arg_key,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIColorParameter(
    int? arg_filterId,
    String? arg_key,
    List<double?>? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIColorParameter,
          [
            arg_filterId,
            arg_key,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSValueParameter(
    int? arg_filterId,
    String? arg_key,
    List<double?>? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSValueParameter,
          [
            arg_filterId,
            arg_key,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIVectorParameter(
    int? arg_filterId,
    String? arg_key,
    List<double?>? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIVectorParameter,
          [
            arg_filterId,
            arg_key,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIImageDataParameter(
    int? arg_filterId,
    String? arg_key,
    _i5.Uint8List? arg_data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIImageDataParameter,
          [
            arg_filterId,
            arg_key,
            arg_data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIImageSourceParameter(
    int? arg_filterId,
    String? arg_key,
    bool? arg_asset,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIImageSourceParameter,
          [
            arg_filterId,
            arg_key,
            arg_asset,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIImageCubeDataParameter(
    int? arg_filterId,
    String? arg_key,
    _i5.Uint8List? arg_data,
    int? arg_size,
    int? arg_columns,
    int? arg_rows,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIImageCubeDataParameter,
          [
            arg_filterId,
            arg_key,
            arg_data,
            arg_size,
            arg_columns,
            arg_rows,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCIImageCubeSourceParameter(
    int? arg_filterId,
    String? arg_key,
    bool? arg_asset,
    String? arg_path,
    int? arg_size,
    int? arg_columns,
    int? arg_rows,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCIImageCubeSourceParameter,
          [
            arg_filterId,
            arg_key,
            arg_asset,
            arg_path,
            arg_size,
            arg_columns,
            arg_rows,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSDataParameter(
    int? arg_filterId,
    String? arg_key,
    _i5.Uint8List? arg_data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSDataParameter,
          [
            arg_filterId,
            arg_key,
            arg_data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSDataSourceParameter(
    int? arg_filterId,
    String? arg_key,
    bool? arg_asset,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSDataSourceParameter,
          [
            arg_filterId,
            arg_key,
            arg_asset,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setNSStringParameter(
    int? arg_filterId,
    String? arg_key,
    String? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNSStringParameter,
          [
            arg_filterId,
            arg_key,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose(int? arg_filterId) => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [arg_filterId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [VideoPreviewApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoPreviewApi extends _i1.Mock implements _i7.VideoPreviewApi {
  @override
  _i4.Future<int> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> connect(
    int? arg_textureId,
    List<int?>? arg_filters,
    String? arg_context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [
            arg_textureId,
            arg_filters,
            arg_context,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disconnect(int? arg_textureId) => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [arg_textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceAsset(
    int? arg_textureId,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSourceAsset,
          [
            arg_textureId,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceFile(
    int? arg_textureId,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSourceFile,
          [
            arg_textureId,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resume(int? arg_textureId) => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [arg_textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pause(int? arg_textureId) => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [arg_textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose(int? arg_textureId) => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [arg_textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [ImagePreviewApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePreviewApi extends _i1.Mock implements _i7.ImagePreviewApi {
  @override
  _i4.Future<int> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> connect(
    int? arg_textureId,
    List<int?>? arg_filters,
    String? arg_context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [
            arg_textureId,
            arg_filters,
            arg_context,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disconnect(int? arg_textureId) => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [arg_textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceAsset(
    int? arg_textureId,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSourceAsset,
          [
            arg_textureId,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceFile(
    int? arg_textureId,
    String? arg_path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSourceFile,
          [
            arg_textureId,
            arg_path,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setData(
    int? arg_textureId,
    _i5.Uint8List? arg_data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setData,
          [
            arg_textureId,
            arg_data,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setOutput(
    int? arg_textureId,
    List<double?>? arg_value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOutput,
          [
            arg_textureId,
            arg_value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> dispose(int? arg_textureId) => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [arg_textureId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
