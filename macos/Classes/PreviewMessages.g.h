// Copyright 2022
// Autogenerated from Pigeon (v4.2.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FLTBindPreviewMessage;
@class FLTSourcePreviewMessage;
@class FLTDataPreviewMessage;
@class FLTPreviewMessage;

@interface FLTBindPreviewMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId
    filterId:(NSNumber *)filterId;
@property(nonatomic, strong) NSNumber * textureId;
@property(nonatomic, strong) NSNumber * filterId;
@end

@interface FLTSourcePreviewMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId
    path:(NSString *)path
    asset:(NSNumber *)asset;
@property(nonatomic, strong) NSNumber * textureId;
@property(nonatomic, copy) NSString * path;
@property(nonatomic, strong) NSNumber * asset;
@end

@interface FLTDataPreviewMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId
    data:(FlutterStandardTypedData *)data;
@property(nonatomic, strong) NSNumber * textureId;
@property(nonatomic, strong) FlutterStandardTypedData * data;
@end

@interface FLTPreviewMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithTextureId:(NSNumber *)textureId;
@property(nonatomic, strong) NSNumber * textureId;
@end

/// The codec used by FLTImagePreviewApi.
NSObject<FlutterMessageCodec> *FLTImagePreviewApiGetCodec(void);

@protocol FLTImagePreviewApi
/// @return `nil` only when `error != nil`.
- (nullable FLTPreviewMessage *)create:(FlutterError *_Nullable *_Nonnull)error;
- (void)connect:(FLTBindPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)disconnect:(FLTPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setSource:(FLTSourcePreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setData:(FLTDataPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)dispose:(FLTPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTImagePreviewApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTImagePreviewApi> *_Nullable api);

/// The codec used by FLTVideoPreviewApi.
NSObject<FlutterMessageCodec> *FLTVideoPreviewApiGetCodec(void);

@protocol FLTVideoPreviewApi
/// @return `nil` only when `error != nil`.
- (nullable FLTPreviewMessage *)create:(FlutterError *_Nullable *_Nonnull)error;
- (void)connect:(FLTBindPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)disconnect:(FLTPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setSource:(FLTSourcePreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)resume:(FLTPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pause:(FLTPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)dispose:(FLTPreviewMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FLTVideoPreviewApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTVideoPreviewApi> *_Nullable api);

NS_ASSUME_NONNULL_END
